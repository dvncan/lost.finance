"use strict";(()=>{var e={};e.id=80,e.ids=[80],e.modules={5142:e=>{e.exports=require("dotenv")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8844:e=>{e.exports=import("ethers")},5582:e=>{e.exports=import("viem")},7489:e=>{e.exports=import("viem/chains")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},3946:(e,t,n)=>{n.a(e,async(e,a)=>{try{n.r(t),n.d(t,{config:()=>u,default:()=>o,routeModule:()=>y});var s=n(1802),r=n(7153),i=n(6249),p=n(9271),d=e([p]);p=(d.then?(await d)():d)[0];let o=(0,i.l)(p,"default"),u=(0,i.l)(p,"config"),y=new s.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/check-address",pathname:"/api/check-address",bundlePath:"",filename:""},userland:p});a()}catch(e){a(e)}})},9271:(e,t,n)=>{n.a(e,async(e,a)=>{try{n.r(t),n.d(t,{default:()=>y});var s=n(2338),r=n(5582),i=n(7489),p=n(75),d=n(5142),o=n.n(d),u=e([s,r,i]);[s,r,i]=u.then?(await u)():u,o().config();let l="0xEE5085D66FE9D6dD3A52C9197EbC526B730CaBb0",m={sepolia:{chain:i.sepolia,url:"https://eth-sepolia.g.alchemy.com/v2/3OOkKP3ZMP_SS5SEGHgUYiPn9J8f_sxP",chainId:11155111},mainnet:{chain:i.mainnet,url:"https://eth-mainnet.g.alchemy.com/v2/3OOkKP3ZMP_SS5SEGHgUYiPn9J8f_sxP",chainId:1}};async function y(e,t){try{let{address:n}=e.query;if(!n||"string"!=typeof n||!(0,s.UJ)(n))return t.status(400).json({status:"error",details:"Invalid Ethereum address"});let a="sepolia";if(!m[a])return t.status(500).json({status:"error",details:"Invalid network configuration"});let i=(0,r.createPublicClient)({chain:m[a].chain,transport:(0,r.http)(m[a].url)});if(await i.readContract({address:l,abi:p,functionName:"isAddressReported",args:[n]})){let e=await i.readContract({address:l,abi:p,functionName:"getAllAddressReports",args:[n]}),s=e.map(e=>({stage:Number(e.stage),to:e.to,txIn:e.txIn,timestamp:Number(e.timestamp)}));return t.status(200).json({status:"malicious",details:{reportCount:e.length,reports:s,network:a,chainId:m[a].chainId}})}return t.status(200).json({status:"safe",details:{network:a,chainId:m[a].chainId}})}catch(e){return console.error("Error checking address:",{message:e.message,code:e.code,stack:e.stack,data:e.data}),t.status(500).json({status:"error",details:{message:"An error occurred while checking the address"}})}}a()}catch(e){a(e)}})},2338:(e,t,n)=>{n.a(e,async(e,a)=>{try{n.d(t,{UJ:()=>i});var s=n(8844),r=e([s]);function i(e){try{return s.ethers.isAddress(e)}catch(e){return!1}}s=(r.then?(await r)():r)[0],a()}catch(e){a(e)}})},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)},75:e=>{e.exports=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"AddressNotFound","type":"error"},{"inputs":[],"name":"AlreadyReported","type":"error"},{"inputs":[],"name":"CannotReportYourself","type":"error"},{"inputs":[],"name":"InvalidInput","type":"error"},{"inputs":[],"name":"NoReportsFound","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint8","name":"stage","type":"uint8"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"txIn","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"indexed":false,"internalType":"struct ReportModel.ScammerAddressRecord[]","name":"publicReports","type":"tuple[]"}],"name":"PublicReportUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_addr","type":"address"},{"indexed":false,"internalType":"bytes32","name":"_transactionHash","type":"bytes32"}],"name":"ScamReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_scammerAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"_transactionHash","type":"bytes32"}],"name":"ScamTransactionReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"","type":"bool"}],"name":"Success","type":"event"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getAllAddressReports","outputs":[{"components":[{"internalType":"uint8","name":"stage","type":"uint8"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"txIn","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct ReportModel.ScammerAddressRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getAllAddressTransactions","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getAllMyReports","outputs":[{"components":[{"internalType":"uint8","name":"stage","type":"uint8"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"txIn","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct ReportModel.ScammerAddressRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isAddressReported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"publicReports","outputs":[{"internalType":"uint8","name":"stage","type":"uint8"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"txIn","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address[]","name":"scammers","type":"address[]"},{"internalType":"bytes32[]","name":"transactions","type":"bytes32[]"}],"internalType":"struct ReportModel.UserReport","name":"report","type":"tuple"}],"name":"reportAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"scammerMap","outputs":[{"internalType":"bool","name":"reported","type":"bool"},{"internalType":"address","name":"scammerAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]')}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=3946);module.exports=n})();